!function(){"use strict";angular.module("musApp",["ngRoute","ngAnimate","btford.socket-io","ui.bootstrap"])}(),function(){"use strict";angular.module("musApp").controller("chatCtrl",["$scope","$element","$filter","musSocketService",function(e,o,r,a){e.chatLog=[],e.message="",e.$on("socket:room-join-success",function(o,r){var a=JSON.parse(r).room.name,t=JSON.parse(r).playerName;e.updateLog(a,"¡Bienvenido a "+a+" "+t+"!")}),e.$on("socket:new-message",function(o,r){e.updateLog(JSON.parse(r).playerName,JSON.parse(r).message)}),e.$on("socket:new-player-joined",function(o,r){var a=JSON.parse(r).room.name,t=JSON.parse(r).playerName;e.updateLog(a,t+" se ha unido a "+a+".")}),e.$on("socket:player-left",function(o,r){var a=JSON.parse(r).room.name,t=JSON.parse(r).playerName;e.updateLog(a,t+" ha abandonado "+a+".")}),e.$watchCollection("chatLog",function(){e.$evalAsync(function(){var e=o[0].getElementsByClassName("chat__panel")[0];e.scrollTop=e.scrollHeight})}),e.updateLog=function(o,r){e.chatLog.push({playerName:o,time:new Date,content:r})},e.sendMessage=function(){a.emit("message",e.message),e.message=""}}])}(),function(){"use strict";angular.module("musApp").controller("gameActionsCtrl",["$scope","musSocketService",function(e,o){console.log(o),e.$on("socket:game-started",function(){e.game.currentStatus="game-started"}),e.$on("socket:update-room",function(){e.isRoomFull()||(e.game.currentStatus="waiting")}),e.$on("socket:hand-started",function(o,r){var a=JSON.parse(r),t=[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]];e.game.currentStatus="hand-started",e.game.players.forEach(function(o,r){e.playerName===o&&(t[r]=a)}),e.game.cards=t}),e.isRoomFull=function(){return e.game.players.filter(function(e){return null!==e}).length===e.game.maxPlayers}}])}(),function(){"use strict";angular.module("musApp").controller("gameTableCtrl",["$scope","playerLocatorService",function(e,o){e.getPlayer=function(r){return o.locatePlayer(e.room.game,e.playerName,r)}}])}(),function(){"use strict";angular.module("musApp").controller("mainCtrl",["$scope","$location","$modal","musSocketService",function(e,o,r,a){e.musModel={},a.emit("mus-info"),e.createRoom=function(){var e=r.open({animation:!0,templateUrl:"src/views/modals/createRoomModal.html",controller:"createRoomModalCtrl",size:"sm"});e.result.then(function(e){a.emit("create-room",JSON.stringify({roomName:e.roomName,playerName:e.playerName}))})},e.$on("socket:room-creation-success",function(e,r){o.url("/room/"+r)}),e.$on("socket:update-mus",function(o,r){e.updateModel(JSON.parse(r))}),e.updateModel=function(o){e.musModel=o},e.joinRoom=function(e){o.url("/room/"+e)},e.roomSize=function(e){return e.game.players.filter(function(e){return null!==e}).length},e.isRoomFull=function(e){return 4===e.game.players.filter(function(e){return null!==e}).length},e.getFullRooms=function(){var o=[];if("undefined"!=typeof e.musModel.roomsModel)for(var r in e.musModel.roomsModel.rooms)e.isRoomFull(e.musModel.roomsModel.rooms[r])&&o.push(e.musModel.roomsModel.rooms[r]);return o},e.getNotFullRooms=function(){var o=[];if("undefined"!=typeof e.musModel.roomsModel)for(var r in e.musModel.roomsModel.rooms)e.isRoomFull(e.musModel.roomsModel.rooms[r])||o.push(e.musModel.roomsModel.rooms[r]);return o},e.getPlayerIndexClass=function(e,o){return"undefined"!=typeof o?"avatar--mini--"+o.indexOf(e):""}}])}(),function(){"use strict";angular.module("musApp").controller("roomCtrl",["$scope","$location","$routeParams","$modal","musSocketService",function(e,o,r,a,t){e.playerName="",e.room={game:{currentStatus:"waiting"}},t.emit("room-info",r.roomId),e.$on("socket:room-info-success",function(r,n){if(e.updateRoom(JSON.parse(n).room),e.playerName=JSON.parse(n).playerName,e.isRoomFull())a.open({animation:!0,templateUrl:"src/views/modals/infoModal.html",controller:"infoModalCtrl",size:"sm",resolve:{infoData:function(){return{title:"Mesa llena",message:"Lo sentimos pero esta mesa está llena. Prueba en otra!"}}}}),o.url("/");else if(!e.isUserInRoomAlready()){var l=a.open({animation:!0,templateUrl:"src/views/modals/joinRoomModal.html",controller:"joinRoomModalCtrl",size:"sm"});l.result.then(function(o){t.emit("join-room",o.playerName,e.room.id)},function(){o.url("/")})}}),e.$on("socket:room-join-success",function(o,r){var a=JSON.parse(r).playerName;e.playerName=a}),e.$on("socket:room-info-failure",function(){a.open({animation:!0,templateUrl:"src/views/modals/infoModal.html",controller:"infoModalCtrl",size:"sm",resolve:{infoData:function(){return{title:"Mesa no válida",message:"La mesa a la que estas intentando acceder no existe. Prueba en otra!"}}}}),o.url("/")}),e.$on("socket:room-join-failure",function(){a.open({animation:!0,templateUrl:"src/views/modals/infoModal.html",controller:"infoModalCtrl",size:"sm",resolve:{infoData:function(){return{title:"Error al unirse a la mesa",message:"Lo sentimos. Hubo un error al acceder a la mesa. Pruebe en otra!"}}}}),o.url("/")}),e.$on("socket:leave-room-success",function(){o.url("/")}),e.$on("socket:update-room",function(o,r){e.$apply(function(){e.updateRoom(JSON.parse(r))})}),e.updateRoom=function(o){var r=e.room.game.currentStatus;e.room=o,e.room.game.currentStatus=r},e.isRoomFull=function(){return e.room.game.players.filter(function(e){return null!==e}).length===e.room.game.maxPlayers},e.isUserInRoomAlready=function(){return e.room.game.players.indexOf(e.playerName)>-1},e.leaveRoom=function(){t.emit("leave-room",e.room.id)}}])}(),function(){"use strict";angular.module("musApp").directive("avatar",function(){return{restrict:"E",replace:!0,templateUrl:"src/views/templates/avatar.html",scope:{playerName:"@",players:"="},link:function(e,o){e.$watch("playerName",function(r){var a="";o[0].classList.forEach(function(e){0===e.indexOf("avatar__player--")&&o.removeClass(e)}),a="undefined"!=typeof e.players&&null!==r&&""!==r?"avatar__player--"+e.players.indexOf(r):"avatar__player--null",o.addClass(a),o.find("strong").text(e.playerName)})}}})}(),function(){"use strict";angular.module("musApp").directive("chat",function(){return{restrict:"E",replace:!0,templateUrl:"src/views/templates/chat.html",scope:{playerName:"=",players:"="},controller:"chatCtrl"}})}(),function(){"use strict";angular.module("musApp").directive("gameActions",function(){return{restrict:"E",replace:!0,templateUrl:"src/views/templates/game-actions.html",scope:{game:"=",playerName:"="},controller:"gameActionsCtrl"}})}(),function(){"use strict";angular.module("musApp").directive("game",function(){return{restrict:"E",replace:!0,scope:{playerName:"=",room:"="},templateUrl:"src/views/templates/game.html",controller:["$scope","playerLocatorService",function(e,o){e.getPlayer=function(r){return o.locatePlayer(e.room.game,e.playerName,r)}}]}})}(),function(){"use strict";angular.module("musApp").directive("gameTable",["cardDealingOrderService","playerLocatorService","cardTranslatorService",function(e,o,r){return{restrict:"E",replace:!0,scope:{playerName:"=",room:"="},templateUrl:"src/views/templates/game-table.html",controller:"gameTableCtrl",link:function(a,t){a.$watch("room.game.cards",function(n,l){if("undefined"!=typeof n&&"undefined"!=typeof l&&"undefined"!=typeof a.playerName&&""!==a.playerName){console.log("newCards"),console.log(n),console.log("oldCards"),console.log(l);var s=e.getDealingOrder(l,n,a.room.game,a.playerName);console.log("dealingOrder"),console.log(s),console.log("room"),console.log(a.room),console.log("game"),console.log(a.room),console.log("players"),console.log(a.room.game.players),console.log("playerName"),console.log(a.playerName);for(var i=0;4>i;i++){var c=o.locatePlayer(a.room.game,a.playerName,i);console.log(c);var u=a.room.game.players.indexOf(c),m=s[u],p=t[0].querySelector("#player"+i+"-cards").children;console.log("playerCardsElement"),console.log(p),m.forEach(function(e,o){0!==e&&(p[o].classList.remove("card--empty"),p[o].classList.add("card__animation--player"+i),p[o].classList.add("card--order"+e),p[o].classList.add("card--"+r.translateCard(a.room.game.cards[u][o])))})}}})}}}])}(),function(){"use strict";angular.module("musApp").directive("message",function(){return{restrict:"E",replace:!0,templateUrl:"src/views/templates/message.html",scope:{playerName:"=",message:"=",players:"="},controller:["$scope",function(e){e.getPlayerIndexClass=function(){return-1===e.players.indexOf(e.message.playerName)?"message__player--room":"message__player--"+e.players.indexOf(e.message.playerName)}}]}})}(),function(){"use strict";angular.module("musApp").directive("spinner",function(){return{restrict:"E",replace:!0,template:'<div class="spinner"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div>'}})}(),function(){"use strict";angular.module("musApp").filter("withoutNull",function(){return function(e){var o=[];return e.forEach(function(e){null!==e&&o.push(e)}),o}})}(),function(){"use strict";angular.module("musApp").config(["$routeProvider",function(e){e.when("/",{templateUrl:"src/views/main.html",controller:"mainCtrl"}).when("/room/:roomId",{templateUrl:"src/views/room.html",controller:"roomCtrl"}).otherwise({redirectTo:"/"})}])}(),function(){"use strict";angular.module("musApp").factory("cardDealingOrderService",["playerLocatorService",function(e){function o(e,o,r){var a;if("right"===r)for(a=0;o>a;a++)e.unshift(e.pop());if("left"===r)for(a=0;o>a;a++)e.push(e.shift())}function r(e,o){e[o].reverse()}function a(a,t,n,l){var s=[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],i=1;if(o(a,n.hand,"left"),o(t,n.hand,"left"),"hand-started"===n.currentStatus)for(var c=0;4>c;c++)for(var u=0;u<a.length;u++)s[u][c]=i,i++;else a.forEach(function(e,o){e.forEach(function(e,r){t[o][r]!==e&&(s[o][r]=i,i++)})});return o(a,n.hand,"right"),o(t,n.hand,"right"),o(s,n.hand,"right"),r(s,n.players.indexOf(e.locatePlayer(n,l,1))),r(s,n.players.indexOf(e.locatePlayer(n,l,2))),s}return{getDealingOrder:a}}])}(),function(){"use strict";angular.module("musApp").factory("cardTranslatorService",function(){function e(e){switch(e){case 0:return"o";case 1:return"c";case 2:return"e";case 3:return"b"}}function o(o){switch(o){case-1:return"empty";case 0:return"reverse";default:var r=o%10,a=Math.floor(o/10);return 0===r&&(r=10,a-=1),e(a)+r}}return{translateCard:o}})}(),function(){"use strict";angular.module("musApp").factory("musSocketService",function(e){var o=e();return o.forward("update-mus"),o.forward("update-room"),o.forward("room-creation-success"),o.forward("room-info-success"),o.forward("room-info-failure"),o.forward("room-join-failure"),o.forward("room-join-success"),o.forward("new-player-joined"),o.forward("leave-room-success"),o.forward("player-left"),o.forward("game-started"),o.forward("hand-started"),o.forward("new-message"),o})}(),function(){"use strict";angular.module("musApp").factory("playerLocatorService",function(){function e(e,o,r){if("undefined"!=typeof e&&"undefined"!=typeof e.players){var a=e.players.indexOf(o),t=(a+r)%e.maxPlayers;return e.players[t]}return null}return{locatePlayer:e}})}(),function(){"use strict";angular.module("musApp").controller("createRoomModalCtrl",["$scope","$modalInstance",function(e,o){e.roomName="",e.playerName="",e.nothingSubmittedYet=!0,e.roomNameIsMissing=function(){return!e.nothingSubmittedYet&&("undefined"==typeof e.roomName||""===e.roomName)},e.playerNameIsMissing=function(){return!e.nothingSubmittedYet&&("undefined"==typeof e.playerName||""===e.playerName)},e.ok=function(){e.nothingSubmittedYet=!1,e.roomNameIsMissing()||e.playerNameIsMissing()||o.close({roomName:e.roomName,playerName:e.playerName})},e.cancel=function(){o.dismiss("cancel")}}])}(),function(){"use strict";angular.module("musApp").controller("infoModalCtrl",["$scope","$modalInstance","infoData",function(e,o,r){e.infoData=r,e.ok=function(){o.close()}}])}(),function(){"use strict";angular.module("musApp").controller("joinRoomModalCtrl",["$scope","$modalInstance",function(e,o){e.playerName="",e.nothingSubmittedYet=!0,e.playerNameIsMissing=function(){return!e.nothingSubmittedYet&&("undefined"==typeof e.playerName||""===e.playerName)},e.ok=function(){e.nothingSubmittedYet=!1,e.playerNameIsMissing()||o.close({playerName:e.playerName})},e.cancel=function(){o.dismiss("cancel")}}])}();