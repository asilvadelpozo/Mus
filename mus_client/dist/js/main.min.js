!function(){"use strict";angular.module("musApp",["ngRoute","ngDialog","btford.socket-io","ui.bootstrap"])}(),function(){"use strict";angular.module("musApp").controller("chatController",["$scope","$element","$filter","musSocketService",function(o,e,r,t){o.chatLog="",o.message="",o.$on("socket:room-join-success",function(e,r){o.updateLog("Room","Welcome to the room "+r+"!")}),o.$on("socket:new-message",function(e,r){o.updateLog(JSON.parse(r).playerName,JSON.parse(r).message)}),o.$on("socket:new-player-joined",function(e,r){o.updateLog("Room",r+" has joined the room")}),o.$on("socket:player-left",function(e,r){o.updateLog("Room",r+" has left the room")}),o.$watch("chatLog",function(){var o=e[0].children[0];o.scrollTop=o.scrollHeight}),o.updateLog=function(e,t){o.chatLog+=r("formatMessage")(e,t)},o.sendMessage=function(){t.emit("message",o.message),o.message=""}}])}(),function(){"use strict";angular.module("musApp").controller("mainCtrl",["$scope","$location","ngDialog","musSocketService",function(o,e,r,t){o.musModel={},t.emit("mus-info"),o.createRoom=function(){r.openConfirm({template:"./src/views/ngDialogTemplates/createRoomDialog.html",className:"ngdialog-theme-default",preCloseCallback:function(){var o=r.openConfirm({template:"./src/views/ngDialogTemplates/roomCreationMissingInfoConfirmationDialog.html",className:"ngdialog-theme-default"});return o},scope:o}).then(function(o){"undefined"!=typeof o.roomName&&""!==o.roomName&&"undefined"!=typeof o.playerName&&""!==o.playerName&&t.emit("create-room",JSON.stringify({roomName:o.roomName,playerName:o.playerName}))})},o.$on("socket:room-creation-success",function(o,r){e.url("/room/"+r)}),o.$on("socket:update-mus",function(e,r){o.updateModel(JSON.parse(r))}),o.updateModel=function(e){o.musModel=e},o.joinRoom=function(o){e.url("/room/"+o)},o.getFullRooms=function(){var e=[];if("undefined"!=typeof o.musModel.roomsModel)for(var r in o.musModel.roomsModel.rooms)o.musModel.roomsModel.rooms[r].players.length===o.musModel.roomsModel.rooms[r].maxPlayers&&e.push(o.musModel.roomsModel.rooms[r]);return e},o.getNotFullRooms=function(){var e=[];if("undefined"!=typeof o.musModel.roomsModel)for(var r in o.musModel.roomsModel.rooms)o.musModel.roomsModel.rooms[r].players.length<o.musModel.roomsModel.rooms[r].maxPlayers&&e.push(o.musModel.roomsModel.rooms[r]);return e}}])}(),function(){"use strict";angular.module("musApp").controller("roomCtrl",["$scope","$location","$routeParams","ngDialog","musSocketService",function(o,e,r,t,a){o.playerName="",o.room={},a.emit("room-info",r.roomId),o.$on("socket:room-info-success",function(r,n){o.updateRoom(JSON.parse(n).room),o.playerName=JSON.parse(n).playerName,o.isRoomFull()?(t.open({template:"./src/views/ngDialogTemplates/roomFullDialog.html",data:{roomId:o.room.id},className:"ngdialog-theme-default"}),e.url("/")):o.isUserInRoomAlready()||t.openConfirm({template:"./src/views/ngDialogTemplates/joinRoomDialog.html",className:"ngdialog-theme-default",preCloseCallback:function(){var o=t.openConfirm({template:"./src/views/ngDialogTemplates/nameMissingConfirmationDialog.html",className:"ngdialog-theme-default"});return o},scope:o}).then(function(r){o.playerName=r,"undefined"!=typeof o.playerName&&""!==o.playerName?a.emit("join-room",o.playerName,o.room.id):(t.open({template:"./src/views/ngDialogTemplates/noValidNameDialog.html",className:"ngdialog-theme-default"}),e.url("/"))},function(){e.url("/")})}),o.$on("socket:room-info-failure",function(o,r){t.open({template:"./src/views/ngDialogTemplates/noValidRoomDialog.html",data:{roomId:r},className:"ngdialog-theme-default"}),e.url("/")}),o.$on("socket:room-join-failure",function(){t.open({template:"./src/views/ngDialogTemplates/joinRoomFailureDialog.html",className:"ngdialog-theme-default"}),e.url("/")}),o.$on("socket:leave-room-success",function(){e.url("/")}),o.$on("socket:update-room",function(e,r){o.$apply(function(){o.updateRoom(JSON.parse(r))})}),o.updateRoom=function(e){o.room=e},o.isRoomFull=function(){return o.room.maxPlayers===o.room.players.length},o.isUserInRoomAlready=function(){return o.room.players.indexOf(o.playerName)>-1},o.leaveRoom=function(){a.emit("leave-room",o.room.id)}}])}(),function(){"use strict";angular.module("musApp").directive("chat",function(){return{restrict:"E",replace:!0,templateUrl:"src/views/templates/chat.html",controller:"chatController"}})}(),function(){"use strict";angular.module("musApp").directive("game",function(){return{restrict:"E",replace:!0,templateUrl:"src/views/templates/game.html"}})}(),function(){"use strict";angular.module("musApp").filter("formatMessage",function(){return function(o,e){return(new Date).toLocaleTimeString()+" - "+o+": "+e+"\n"}})}(),function(){"use strict";angular.module("musApp").filter("toArray",function(){return function(o,e){for(var r in e)o.push(e[r]);return o}})}(),function(){"use strict";angular.module("musApp").config(["$routeProvider",function(o){o.when("/",{templateUrl:"src/views/main.html",controller:"mainCtrl"}).when("/room/:roomId",{templateUrl:"src/views/room.html",controller:"roomCtrl"}).otherwise({redirectTo:"/"})}])}(),function(){"use strict";angular.module("musApp").factory("musSocketService",function(o){var e=o();return e.forward("update-mus"),e.forward("update-room"),e.forward("room-creation-success"),e.forward("room-info-success"),e.forward("room-info-failure"),e.forward("room-join-failure"),e.forward("room-join-success"),e.forward("new-player-joined"),e.forward("leave-room-success"),e.forward("player-left"),e.forward("new-message"),e})}();